### Load Test Playbook (Ubuntu)
# Runs the AWS Kadena load test

- name: Spin up EC2 Instances
  hosts: localhost
  gather_facts: True
  vars:
    type: t2.micro
    image: ami-ba602bc2
    security: default
    region: us-west-2
  tasks:
    - name: Launch Kadena Server Instances
      ec2:
        key_name: wizard-example-key
        group: "{{ security }}"
        instance_type: "{{ type }}"
        image: "{{ image }}"
        wait: true
        wait_timeout: 500
        region: "{{ region }}"
        monitoring: no
        instance_tags:
          Name: kadena_server
        exact_count: 1
        count_tag:
          Name: kadena_server
      register: ec2_servers_out

    - name: Launch Kadena Client Instance
      ec2:
        key_name: wizard-example-key
        group: "{{ security }}"
        instance_type: "{{ type }}"
        image: "{{ image }}"
        wait: true
        wait_timeout: 500
        region: "{{ region }}"
        monitoring: no
        instance_tags:
          Name: kadena_client
        exact_count: 1
        count_tag:
          Name: kadena_client
      register: ec2_client_out

    - name: Add Instances to 'kadena_all' Host Group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: kadena_all
      with_items: 
        - "{{ ec2_servers_out.instances }}"
        - "{{ ec2_client_out.instances }}"

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items:
        - "{{ ec2_servers_out.instances }}"
        - "{{ ec2_client_out.instances }}"

- name: Configure instance(s)
  hosts: kadena_all
  become: True
  vars:
    ansible_python_interpreter: /usr/bin/python3
  gather_facts: True
  tasks:
    - command: echo "Inside the instances!"

- name: Terminate EC2 Instances
  hosts: localhost
  connection: local
  vars:
    region: us-west-2
  tasks:
    - name: Terminate Kadena Server(s)
      ec2:
        state: absent
        region: "{{ region }}"
        instance_ids: "{{ ec2_servers_out.instance_ids }}"
    - name: Terminate Kadena Client(s)
      ec2:
        state: absent
        region: "{{ region }}"
        instance_ids: "{{ ec2_client_out.instance_ids }}"
