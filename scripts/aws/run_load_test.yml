### Load Test Playbook (Ubuntu)
# Runs the AWS Kadena load test

- name: Spin up EC2 Instances
  hosts: localhost
  gather_facts: True
  vars:
    type: t2.micro
    # the kadena-ubuntu-base image
    image: ami-0709eacb612a326cb
    security: kadena_beta
    region: us-west-2
  tasks:
    - name: Launch Kadena Server Instances
      ec2:
        key_name: wizard-example-key
        group: "{{ security }}"
        instance_type: "{{ type }}"
        image: "{{ image }}"
        wait: true
        wait_timeout: 500
        region: "{{ region }}"
        monitoring: no
        instance_tags:
          Name: kadena_server
        exact_count: 4
        count_tag:
          Name: kadena_server
      register: ec2_servers_out

    - name: Add Instances to 'kadena_all' Host Group
      add_host:
        hostname: "{{ item.private_ip }}"
        groupname: kadena_all
      with_items: 
        - "{{ ec2_servers_out.instances }}"

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items:
        - "{{ ec2_servers_out.instances }}"

- name: Create node configurations
  hosts: localhost
  vars:
    ipList: "{{ ec2_servers_out.instances }}"
  tasks:
    - name: Create file of Kadena server(s)' IP addresses
      template:
        src: /home/ubuntu/kadena/scripts/aws/ipAddr.j2
        dest: /home/ubuntu/ipAddr.yml
        mode: 0777
    - name: Create 'conf' directory to store nodes' configuration file 
      file:
        path: /home/ubuntu/conf/
        state: directory
        mode: 0755
    - name: Generate the node configuration for the Kadena servers
      shell: yes '' | /home/ubuntu/kadena-beta/bin/ubuntu-16.04/genconfs --distributed /home/ubuntu/ipAddr.yml
      args:
        chdir: /home/ubuntu/

- name: Configure instance(s)
  hosts: kadena_all
  become: True
  vars:
    ansible_python_interpreter: /usr/bin/python3
  gather_facts: True
  tasks:
    - name: Create log directory (if it doesn't exist) in server nodes
      file:
        path: /home/ubuntu/log/
        state: directory
        owner: ubuntu
        mode: 0755
    - name: Remove Kadena server logs
      file: 
        path: "{{ item }}"
        state: absent
      with_items:
          - "/home/ubuntu/log/*.sqlite*"
          - "/home/ubuntu/log/*.log"
    - name: Create necessary log files
      file:
        path: "{{ item }}"
        state: touch
        owner: ubuntu
      with_items:
        - "/home/ubuntu/log/access.log"
        - "/home/ubuntu/log/error.log"
        - "/home/ubuntu/log/node.log"
    - name: Copy node conf file to server
      copy:
        src: /home/ubuntu/conf/{{inventory_hostname}}-cluster.yaml
        dest: /home/ubuntu/conf-cluster.yaml
        owner: ubuntu
    - name: Copy `kadenaserver` executable to server
      copy:
        src: /home/ubuntu/kadena-beta/bin/ubuntu-16.04/kadenaserver
        dest: /home/ubuntu/kadenaserver
        owner: ubuntu
        mode: a+x

- name: Start Kadena Servers
  hosts: kadena_all
  become: True
  vars:
    ansible_python_interpreter: /usr/bin/python3
  gather_facts: True
  tasks:
    - shell: ./kadenaserver +RTS -N4 -RTS -c conf-cluster.yaml 2>&1 | tee -a log/node.log
      async: 300
      poll: 0
      register: active_servers

- name: Run Load Test
  hosts: localhost
  tasks:
    - name: Make bolosim executable
      file:
        path: /home/ubuntu/kadena-beta/bin/ubuntu-16.04/bolosim
        mode: a+x
    - name: Run bolosim test
      command: rlwrap -A ./../kadena-beta/bin/ubuntu-16.04/bolosim --transactions=120  --batchsize=30 --norunserver --configfile=client.yaml --dirforconfig=../conf/
      args:
        chdir: /home/ubuntu/kadena

- name: Terminate all Kadena server EC2 instances
  hosts: localhost
  connection: local
  vars:
    region: us-west-2
  tasks:
    - ec2:
        state: absent
        region: "{{ region }}"
        instance_ids: "{{ ec2_servers_out.instance_ids }}"
