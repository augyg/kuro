### (Re)start Kadena Servers

- name: Shutdown Kadena Server(s)
  hosts: tag_Name_kadena_server
  become: True
  vars:
    ansible_python_interpreter: /usr/bin/python3
  gather_facts: False
  tags:
    - shutdown
  tasks:
    - name: Identify Threads Running Kadena Server (if running)
      shell: "ps -ef | grep -v grep | grep -w kadenaserver | awk '{print $2}'"
      register: running

    - name: Kill Running Threads
      shell: "kill {{ item }}"
      with_items: "{{ running.stdout_lines }}"

    - wait_for:
        path: "/proc/{{ item }}/status"
        state: absent
      with_items: "{{ running.stdout_lines }}"
      ignore_errors: yes
      register: killed

    - name: Force Kill Stuck Threads
      shell: "kill -9 {{ item }}"
      with_items: "{{ killed.results | select('failed') | map(attribute='item') | list }}"

- name: Clean up Kadena Server(s) Logs and Configs
  hosts: tag_Name_kadena_server
  become: True
  vars:
    ansible_python_interpreter: /usr/bin/python3
  gather_facts: False
  tags:
    - cleanup
  tasks:
    - name: Remove Kadena Server Logs
      shell: rm -rf /home/ubuntu/log/*     
      args: 
        warn: False

    - name: Create necessary log files
      file:
        path: "{{ item }}"
        state: touch
        owner: ubuntu
      with_items:
        - "/home/ubuntu/log/access.log"
        - "/home/ubuntu/log/error.log"
        - "/home/ubuntu/log/node.log"
    
    - name: Copy node conf file to server (if it is a new conf)
      copy:
        src: /home/ubuntu/conf/{{inventory_hostname}}-cluster.yaml
        dest: /home/ubuntu/conf-cluster.yaml
        owner: ubuntu

- name: Start Kadena Servers
  hosts: tag_Name_kadena_server
  become: True
  vars:
    ansible_python_interpreter: /usr/bin/python3
  gather_facts: False
  tasks:
    - shell: ./kadenaserver +RTS -N4 -RTS -c conf-cluster.yaml 2>&1 | tee -a log/node.log && sleep 1
      async: 86400
      poll: 0
      register: active_servers
    - pause:
        seconds: 15
